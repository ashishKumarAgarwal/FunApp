<CascadingValue Value="this">
    <div class="btn-group" role="group">
        @foreach (TabPage tabPage in Pages)
        {
            <button type="button"
                    class="btn @GetButtonClass(tabPage)"
                    @onclick=@( () => ActivatePage(tabPage) ) >

                @if (TabTextTemplate != null)
                {
                    @TabTextTemplate(tabPage)
                }
                else
                {
                    @tabPage.Text
                }
            </button>
        }
    </div>
    @ChildContent
</CascadingValue>

@code {
    [Parameter]
    public RenderFragment ChildContent { get; set; }

    [Parameter]
    public RenderFragment<TabPage> TabTextTemplate { get; set; }

    public TabPage ActivePage { get; set; }
    List<TabPage> Pages = new List<TabPage>();

    internal void AddPage(TabPage tabPage)
    {
        Pages.Add(tabPage);
        if (Pages.Count == 1)
            ActivePage = tabPage;
        StateHasChanged();
    }
    string GetButtonClass(TabPage page)
    {

        var cssClass= page == ActivePage ? "btn-primary" : "btn-secondary";
        if (page.IsParent)
        {
            cssClass = cssClass + " parentTab";
        }
        return cssClass;
    }

    void ActivatePage(TabPage page)
    {
        ActivePage = page;
    }

}