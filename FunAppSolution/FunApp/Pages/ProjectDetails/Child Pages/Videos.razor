@using FunApp.Common.Models
@using FunApp.Services
@inject IVideoService VideoService
<h3 class="container-header bg-4 text-center">Videos</h3>

@{
    if(SubjectAreaVideos==null)
    {

    }
    else
    {
        <div class="container-fluid bg-5">
            <table class="table table-borderless" cellpadding="10">
                <thead>
                <tr>
                    <th>Name</th>
                    <th>Type</th>
                    <th></th>
                </tr>
                </thead>
                <tbody>

                @foreach (var video in SubjectAreaVideos)
                {
                    <tr>
                        <td>@video.Name</td>
                        <td>@video.Type</td>
                        <td><iframe width="300" height="200" src="@video.Value" allowfullscreen style="border:none;"></iframe></td>
                    </tr>
                }

                <tr></tr>
                </tbody>
            </table>
        </div>
    }
}

@code
{

    [Parameter]
    public int SubjectAreaId { get; set; }

    IEnumerable<Video> SubjectAreaVideos { get; set; }

    protected override async Task OnInitializedAsync()
    {
        SubjectAreaVideos = await VideoService.GetVideosBySubjectArea(SubjectAreaId);
    }

}